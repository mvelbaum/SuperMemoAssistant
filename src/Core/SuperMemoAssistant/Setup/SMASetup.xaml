<mah:MetroWindow x:Class="SuperMemoAssistant.Setup.SMASetup"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:setup="clr-namespace:SuperMemoAssistant.Setup"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:markup="clr-namespace:SuperMemoAssistant.Sys.Windows.Markup;assembly=SuperMemoAssistant.Interop"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        xmlns:data="clr-namespace:SuperMemoAssistant.Sys.Windows.Data;assembly=SuperMemoAssistant.Interop"
        xmlns:wpf="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Height="600" Width="840"
        MinHeight="300" MinWidth="400"
        ShowTitleBar="False"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip"
        Style="{DynamicResource CleanWindowStyleKey}"
        GlowBrush="{DynamicResource AccentColorBrush}"
        Loaded="SMASetup_Loaded"
        KeyDown="MetroWindow_KeyDown">

  <mah:MetroWindow.Resources>
    <data:IsNullConverter x:Key="IsNull" />
    <data:BooleanToVisibilityConverterHiddenEx x:Key="BoolToVis"/>

    <Style x:Key="StepListViewItem" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MetroListViewItem}">
      <Setter Property="IsEnabled" Value="False"/>
      <Setter Property="Focusable" Value="False" />
      <Setter Property="mah:ItemHelper.DisabledSelectedBackgroundBrush" Value="White" />
      <Setter Property="mah:ItemHelper.DisabledSelectedForegroundBrush" Value="#42B983" />
      <Setter Property="mah:ItemHelper.DisabledForegroundBrush" Value="White" />
    </Style>
  </mah:MetroWindow.Resources>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="200" />
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>

    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
      <RowDefinition Height="auto" />
    </Grid.RowDefinitions>

    <!--Step list-->
    <ListView Name="lvScreenTitles"
              Grid.Column="0" Grid.Row="0"
              Grid.RowSpan="2"
              ItemsSource="{Binding Screens}"
              SelectedItem="{Binding CurrentScreen, Mode=OneWay}"
              Padding="0 16 0 0"
              ItemContainerStyle="{DynamicResource StepListViewItem}"
              Background="#42B983"
              BorderThickness="0">
      <ListView.ItemTemplate>
        <DataTemplate DataType="{x:Type setup:ISMASetupScreen}">
          <Grid>
          <StackPanel Orientation="Horizontal"
                      Margin="16 8 0 8">
            <fa5:SvgAwesome Icon="Regular_CheckCircle"
                            Margin="0 0 10 0"
                            VerticalAlignment="Center"
                            Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                            Visibility="{Binding IsSetup, Converter={StaticResource BoolToVis}}"
                            Height="14"
                            Width="14" />

            <TextBlock Text="{Binding ListTitle}"
                       FontSize="16"
                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                       VerticalAlignment="Center" />
            </StackPanel>
          </Grid>
        </DataTemplate>
      </ListView.ItemTemplate>
    </ListView>

    <!--Setup screen-->
    <Grid Grid.Column="1" Grid.Row="0"
                Margin="32 16 32 16">
      <Grid.RowDefinitions>
        <RowDefinition Height="auto" />
        <RowDefinition Height="auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <TextBlock Grid.Row="0"
                 Text="{Binding CurrentScreen.WindowTitle, StringFormat=SMA Setup: {0}}"
                 FontSize="18"
                 Foreground="#42B983"
                 Margin="0" />

      <Border Grid.Row="1"
              BorderBrush="#6AC79D"
              BorderThickness="2 0 0 0"
              Background="#F9FAFB"
              Margin="0 16 0 16">

        <wpf:MarkdownViewer Markdown="{Binding CurrentScreen.Description}">
          <wpf:MarkdownViewer.Style>
            <Style TargetType="{x:Type wpf:MarkdownViewer}">
              <Setter Property="Visibility" Value="Visible" />
              
              <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentScreen.Description, Converter={StaticResource IsNull}}" Value="True">
                  <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </wpf:MarkdownViewer.Style>
        </wpf:MarkdownViewer>
      </Border>

      <ContentPresenter Grid.Row="2"
                        Content="{Binding CurrentScreen}" />
    </Grid>

    <!--Buttons-->
    <Grid Grid.Column="1" Grid.Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="auto" />
        <ColumnDefinition Width="auto" />
      </Grid.ColumnDefinitions>

      <Button Grid.Column="1"
              Margin="10"
              Command="{Binding BackCommand}">
        <AccessText>_Back</AccessText>
        <Button.Style>
          <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SMAButton}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=lvScreenTitles, Path=SelectedIndex, Converter={markup:LesserThan 1}}"
                           Value="True">
                <Setter Property="Button.IsEnabled" Value="false" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Button.Style>
      </Button>

      <Button Grid.Column="2"
              Margin="10"
              Command="{Binding NextCommand}"
              IsEnabled="{Binding CurrentScreen.IsSetup, TargetNullValue=False}">
        <AccessText>_Next</AccessText>
      </Button>
    </Grid>

  </Grid>
</mah:MetroWindow>